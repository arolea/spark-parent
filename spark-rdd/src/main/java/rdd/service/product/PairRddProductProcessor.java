package rdd.service.product;

import org.apache.spark.api.java.JavaPairRDD;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import javax.annotation.PostConstruct;
import java.util.Arrays;
import java.util.List;
import java.util.Map;

/**
 * PairRDD processor examples.
 * Created by rolea on 5/5/17.
 */
@Component
public class PairRddProductProcessor {

    @Autowired
    private ProductReader reader;

    private JavaPairRDD<String, Integer> productCountByCategory;

    @PostConstruct
    public void init(){
        productCountByCategory = reader.getFirstProductsCountReducedByCategory();
    }

    /**
     * mapValues example - square product count in each category (apply a function to the values of each pair).
     */
    public JavaPairRDD<String, Integer> mapValuesExample() {
        return productCountByCategory
                .mapValues(categoryCount -> categoryCount * categoryCount);
    }

    /**
     * flatMapValues example - splits each category in three categories, with different product counts
     * (flattens the list generated by each value).
     */
    public JavaPairRDD<String, Integer> flatMapValuesExample() {
        return productCountByCategory
                .flatMapValues(categoryCount -> Arrays.asList(categoryCount,categoryCount+1,categoryCount+2));
    }

    /**
     * sortByKey example - sorts categories by category names (sorts the RDD by keys).
     */
    public JavaPairRDD<String, Integer> sortByKeysExample() {
        return productCountByCategory
                .sortByKey();
    }

    /**
     * countByKeyExample example - counts how many times a category repeats (get the frequency count of keys).
     */
    public Map<String, Long> countByKeyExample() {
        return productCountByCategory
                .countByKey();
    }

    /**
     * collectAsMap example - converts the category count RDD to a Map (reduce a RDD to a Map for easy lookup).
     */
    public Map<String, Integer> collectToMapExample() {
        return productCountByCategory
                .collectAsMap();
    }

    /**
     * lookup example - find category values by category name (find RDD values by key)
     */
    public List<Integer> lookupExample() {
        return productCountByCategory
                .lookup("Category 1");
    }

}
